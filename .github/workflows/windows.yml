name: Windows Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  VULKAN_VERSION: 1.3.261.1

jobs:
  windows-clang-cl:
    name: (clang-cl) Windows
    runs-on: [ self-hosted, windows, x64 ]
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022 ]
        mode: [ release, debug ]
        toolchain: [ clang-cl ]
        arch: [ x64 ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Ninja
        uses: turtlesec-no/get-ninja@1.1.0

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: ${{env.VULKAN_VERSION}}
          cache: true

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      # Force xmake to a specific folder (for cache)
      - name: Set xmake package cache path
        run: echo "XMAKE_PKG_CACHEDIR=$(pwd)/xmake-cache" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

              # Cache xmake dependencies
      - name: Retrieve xmake cache for packages
        uses: actions/cache@v2
        with:
          path: xmake-cache
          key: ${{ matrix.os }}-${{ matrix.arch }}

      - name: Set release arch name
        run: |
          if ("${{ matrix.arch }}" -eq "x64") {
            Write-Output "RELEASE_NAME=win64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
          } else {
            Write-Output "RELEASE_NAME=win32" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
          }

      - name: Build
        run: |
          xrepo add-repo exdal-repo https://github.com/exdal/xmake-repo
          xmake f -vD --toolchain=${{ matrix.toolchain }} --mode=${{ matrix.mode }} -a ${{ matrix.arch }} -p windows
          xmake -vD
